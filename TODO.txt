

DATA OPTIMIZATIONS
------------------

object pool
use a-star, isGeoJson to auto swap on coordinate compare
minifier - uglify-js

TEST directed graph
 -- TEST directed graph from geojson extension

add filter criteria extension
 -- research how CH and AF modify traditional dijkstra
      for both build steps and execute steps
 -- what modifications would be needed for bidirectional dijkstra?


chaseJS as a plugin for faster-dijkstra
 -- probably want to roughly implement this before publishing faster-dijkstra 

faster-dijkstra package - if its not faster, might want to just call it geojson-dijkstra
 -- fancy documentation


-- other repos -- 

tailor new dijkstra to all alternate uses (contraction hierarchy and arcflags)

distance speedup heuristic for real-distance networks

spatial community link



OTHER
------

join alike and cut at intersections should have a recompute line length option

find nearest helper method - geojson api



BUILDING CH && ARCFLAGS
---------------------------

make contraction hierarchy building process faster
-limit hops speed up contraction hierarchy?

michigan non-contiguous kmeans -is this a problem?  Research METIS

Cut ArcFlags processing time by using contraction hierarchy instead of std dijkstra

2 tiered arcFlags??


BIG PICTURE
--------------

Integrate CH with ArcFlags

golang or native node addon build-hierarchy and build-arcflags

C++ implementation for runDijkstra webAssembly
