
Add segments calc on ArcFlags

ArcFlags no speedup?

?? dont store arc flags on every arc, only boundary arcs

use the same edge hash - don't do
 - Directed graph options
 - store edge hash once for each node pair.  forward and reverse flag for arc flags.

michigan non-contiguous -is this a problem?

make contraction hierarchy building process faster
-limit hops speed up contraction hierarchy?


speedwise would help a bit if edge hash distance lookup could be replaced by storing cost in adjacency list
- may not be practical

Integrate CH with ArcFlags


after: WebAssembly

---------

API Design

import {runContraction, Chase} from 'chase-js'
const {runContraction, runValidation, Chase} = require('chase-js');


 reference to my geojson cleanup library in Docs

 runContraction options: { (debug) }
 runValidation (looping segments or otherwise bad geojson)

 return Chase object

 new Chase()

 .saveHierarchy - this is just geojson w extra edges, + arc-flags + options metadata
 .loadHierarchy -
 .query({geojson=true, segmentIds=true, distance=true})

