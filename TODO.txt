

I don't think I need any of the geo other than clustering!!
- good
because validation.js doesnt work because coords are fundamentally different

make contraction hierarchy building process faster
-limit hops speed up contraction hierarchy?


size of contraction hierarchy is 2x original

- speedwise would help a bit if edge hash distance lookup could be replaced by storing cost in adjacency list

Directed graph options

store edge hash once for each node pair.  forward and reverse flag for arc flags.

ArcFlags


after: golang ??

---------

API Design

import {runContraction, Chase} from 'chase-js'
const {runContraction, runValidation, Chase} = require('chase-js');


 reference to my geojson cleanup library in Docs

 runContraction options: { (debug) }
 runValidation (looping segments or otherwise bad geojson)

 return Chase object

 new Chase()

 .saveHierarchy - this is just geojson w extra edges, + arc-flags + options metadata
 .loadHierarchy -
 .query({geojson=true, segmentIds=true, distance=true})

